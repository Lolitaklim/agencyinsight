{"mappings":"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","sources":["src/scripts/cases.js"],"sourcesContent":["// Добавление обработчика для обновления при изменении размера окна (updateCasesDisplay) => handleResize\n\nconst casesContainer = document.getElementById('casesContainer')\nconst categoriesContainer = document.getElementById('categoriesContainer')\nconst SERVER_URL = 'http://localhost:8080'\nconst state = {}\nconst caseTemplate = (\n  href,\n  imageUrl,\n  altImage,\n  title,\n  category,\n  gridArea,\n  category_id\n) => `\n    <a href=\"case.html?case=${encodeURIComponent(\n      href\n    )}\" class=\"case\" style=\"grid-area: ${gridArea}\">\n        <div class=\"container_img\">\n            <img src=\"${SERVER_URL}/uploads/${imageUrl}\" alt=\"${altImage}\" />\n        </div>\n        <p class=\"category\" data-category=\"${category_id}\">${category}</p>\n        <p class=\"title\">${title}</p>\n    </a>\n`\n\nasync function loadCases() {\n  try {\n    const response = await fetch(`${SERVER_URL}/api/get_all_cases.php`)\n\n    state.data = await response.json()\n    state.layout = []\n\n    // handleResize\n    updateCasesDisplay()\n    displayCategories(state.data.categories)\n  } catch (error) {\n    console.error('Ошибка загрузки данных для Cases:', error)\n  }\n}\n\nloadCases()\n\n// Обновление отображения случаев в зависимости от ширины экрана\nconst updateCasesDisplay = () => {\n  casesContainer.innerHTML = ''\n  if (window.innerWidth >= 1200) {\n    displaySnakeCases(4, '16vw', state.data.cases)\n  } else if (window.innerWidth <= 1200 && window.innerWidth >= 900) {\n    displaySnakeCases(3, '21.8vw', state.data.cases)\n  } else if (window.innerWidth <= 900) {\n    displayCases(state.data.cases)\n  }\n}\n\nconst updateCasesDisplayWithFilteredCases = (cases) => {\n  casesContainer.innerHTML = ''\n  if (window.innerWidth >= 1200) {\n    displaySnakeCases(4, '16vw', cases)\n  } else if (window.innerWidth <= 1200 && window.innerWidth >= 900) {\n    displaySnakeCases(3, '21.8vw', cases)\n  } else if (window.innerWidth <= 900) {\n    displayCases(cases)\n  }\n}\n\n// Функция отображения случаев в формате \"змейка\"\nfunction displaySnakeCases(maxRowLength, heightCase, cases) {\n  const trimData = cases\n  state.layout.length = 0\n  displayCases(trimData)\n\n  // Заполнение пустых ячеек для полного ряда\n  if (state.layout.length % maxRowLength > 0) {\n    const missingCells = maxRowLength - (state.layout.length % maxRowLength)\n    state.layout.push(...Array(missingCells).fill('.'))\n  }\n\n  // Формирование шаблона сетки для CSS Grid\n  let gridTemplateAreas = ''\n  for (let i = 0; i < state.layout.length; i += maxRowLength) {\n    const row = state.layout.slice(i, i + maxRowLength)\n    if ((i / maxRowLength) % 2 === 1) {\n      row.reverse()\n    }\n    gridTemplateAreas += `'${row.join(' ')}' `\n  }\n\n  const gridTemplateRows = Math.ceil(state.layout.length / maxRowLength)\n  casesContainer.style.gridTemplateRows = `repeat(${gridTemplateRows}, ${heightCase})`\n  casesContainer.style.gridTemplateAreas = gridTemplateAreas.trim()\n}\n\n// Функция отображения случаев\nfunction displayCases(cases) {\n  const slidesHtml = cases\n    .map((item) => {\n      const itemName = `item-${item.case_id}`\n      const count = item.block_size == 1 ? 1 : 2\n      state.layout.push(...Array(count).fill(itemName))\n\n      return caseTemplate(\n        `${item.href}`,\n        item.image_url,\n        item.alt_image,\n        item.title,\n        item.category,\n        `item-${item.case_id}`,\n        item.category_id\n      )\n    })\n    .join('')\n  casesContainer.innerHTML = slidesHtml\n}\n\nconst categoryTemplate = (category_id, category) => `\n    <h3 class=\"category ${\n      category_id === 'all' ? 'active' : ''\n    }\" data-category=\"${category_id}\" >${category}</h3>\n`\n\nfunction displayCategories(categories) {\n  const allCategory = { category_id: 'all', category: 'Все' }\n  const updatedCategories = [allCategory, ...categories]\n  const slidesHtml = updatedCategories\n    .map((item) => {\n      return categoryTemplate(item.category_id, item.category)\n    })\n    .join('')\n  categoriesContainer.innerHTML = slidesHtml\n  addClickHandlers()\n}\n\nfunction addClickHandlers() {\n  const categories = document.querySelectorAll('.category')\n  categories.forEach((category) => {\n    category.addEventListener('click', function () {\n      const activeCategory = document.querySelector('.active')\n      // if (activeCategory) {\n      activeCategory.classList.remove('active')\n      // }\n      category.classList.add('active')\n\n      filterCases(category.dataset.category)\n    })\n  })\n}\n\nfunction filterCases(categoryId) {\n  const filteredCases =\n    categoryId === 'all'\n      ? state.data.cases\n      : state.data.cases.filter((item) => item.category_id === categoryId)\n\n  updateCasesDisplayWithFilteredCases(filteredCases)\n}\n"],"names":[],"version":3,"file":"cases.19996ef1.js.map","sourceRoot":"/__parcel_source_root/"}